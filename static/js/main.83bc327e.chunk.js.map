{"version":3,"sources":["services/recipes/recipes-service.js","secret/secret.js","components/recipe-cards/recipe-card/recipe-card.js","components/recipe-cards/recipe-cards.js","pages/search/search.js","components/recipe-cards/recipe-card-detail/recipe-card-detail.js","pages/home/home.js","components/navbar/navbar.js","components/footer/footer.js","hoc/background.js","App.js","serviceWorker.js","index.js","assets/salad.jpg","assets/dessert.jpg","assets/sea-food.jpg","assets/salad-bowl-3.png","assets/table.jpg"],"names":["fetchRecipes","query","a","axios","get","params","app_id","app_key","q","response","recipes","data","hits","map","obj","recipe","id","uri","replace","fetchRecipeById","recipeCard","props","style","width","Img","variant","src","imgSrc","Body","Title","label","Text","source","className","calories","toFixed","ingredientsLength","onClick","click","withRouter","recipeCards","key","image","length","history","push","pathname","match","path","Search","useState","recipesState","setRecipesState","loading","loaded","error","loadState","setLoadState","queryState","setQueryState","useEffect","recipesService","fetchData","handleQuery","event","target","value","preventDefault","handleSearchButton","Fragment","inline","type","placeholder","onChange","onKeyPress","animation","TagBox","bg","title","labels","RecipeCardDetail","recipeState","setRecipeState","alt","ingredientLines","ing","Item","href","url","dietLabels","healthLabels","cautions","RowDish","auxItem","leftItem","rightItem","roundedCircle","justify","order","left","home","SaladBowl","SeaFood","Dessert","navbar","expand","Brand","Logo","height","Toggle","aria-controls","Collapse","Link","as","to","exact","component","Home","footer","background","TableBg","children","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.83bc327e.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { edamamAppId, edamamAppKey } from '../../secret/secret';\r\n\r\nexport const fetchRecipes = async (query) => {\r\n    /* const returned = {\r\n      data: {\r\n        hits: [\r\n          {\r\n            recipe: {\r\n              label: \"\",\r\n              image: \"http://...\",\r\n              source: \"\",\r\n              healtLabels: [\"\"],\r\n              cautions: [\"\"],\r\n              ingredientLines: [\"\"],\r\n              calories: 0,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    };*/\r\n    const response = await axios.get(\"https://api.edamam.com/search\", {\r\n        params: {\r\n            app_id: edamamAppId,\r\n            app_key: edamamAppKey,\r\n            q: query,\r\n        },\r\n    });\r\n\r\n    const recipes = response.data.hits.map(obj => {\r\n        const newObj = {\r\n            ...obj.recipe,\r\n            id: obj.recipe.uri.replace(/^[a-z/:.#]*_([a-zA-Z0-9]*)$/, '$1')\r\n        };\r\n\r\n        return newObj;\r\n    });\r\n\r\n    return recipes;\r\n};\r\n\r\nexport const fetchRecipeById = async (id) => {\r\n\r\n    let recipe = null;\r\n\r\n    const response = await axios.get('https://api.edamam.com/search?'\r\n        + `app_id=${edamamAppId}&app_key=${edamamAppKey}&r=http%3A%2F%2Fwww.edamam.com%2Fontologies%2Fedamam.owl%23recipe_${id}`);\r\n\r\n    if (response.data) {\r\n        recipe = response.data[0];\r\n    }\r\n\r\n    return recipe;\r\n};","\r\nexport const edamamAppId = 'dd34727e';\r\n\r\nexport const edamamAppKey = \"6db4b1794c2680568d5a7c4b71861862\";","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst recipeCard = props => (\r\n  <Card style={{ width: '18rem' }}>\r\n    <Card.Img variant='top' src={props.imgSrc} />\r\n    <Card.Body>\r\n      <Card.Title>{props.label}</Card.Title>\r\n      <Card.Text>{props.source}</Card.Text>\r\n    </Card.Body>\r\n    <ListGroup className='list-group-flush'>\r\n      <ListGroupItem>\r\n        <span className='text-success'>{props.calories.toFixed(2)}</span>{' '}\r\n        calories\r\n      </ListGroupItem>\r\n      <ListGroupItem>\r\n        <span className='text-success'>{props.ingredientsLength}</span>{' '}\r\n        ingredients\r\n      </ListGroupItem>\r\n    </ListGroup>\r\n    <Card.Body>\r\n      <Button variant='primary' onClick={props.click}>Go to recipe</Button>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nexport default recipeCard;\r\n","import React from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport \"./recipe-cards.css\";\r\nimport RecipeCard from \"./recipe-card/recipe-card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nconst recipeCards = props => {\r\n\r\n  const recipeSelectHandler = (id) => {\r\n    props.history.push({pathname: `${props.match.path}${id}`})\r\n  }\r\n\r\n  const recipeCards = props.recipes.map(recipe => (\r\n    <Col\r\n      key={recipe.id}\r\n      className=\"mt-5 col-content-center\">\r\n      <RecipeCard\r\n        imgSrc={recipe.image}\r\n        label={recipe.label}\r\n        source={recipe.source}\r\n        calories={recipe.calories}\r\n        ingredientsLength={props.recipes.length}\r\n        click={() => recipeSelectHandler(recipe.id)}\r\n      />\r\n    </Col>\r\n  ));\r\n  return (\r\n    <Container>\r\n      <Row>{recipeCards}</Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(recipeCards);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport * as recipesService from '../../services/recipes/recipes-service';\r\nimport RecipeCards from \"../../components/recipe-cards/recipe-cards\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\n\r\nconst Search = props => {\r\n  const [recipesState, setRecipesState] = useState({ recipes: [], });\r\n  const [loadState, setLoadState] = useState({ loading: false, loaded: true, error: '', });\r\n  const [queryState, setQueryState] = useState({ query: '', });\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const query = queryState.query;\r\n\r\n      if (loadState.loading) {\r\n\r\n        try {\r\n          const recipes = await recipesService.fetchRecipes(query);\r\n          setRecipesState({ recipes: recipes });\r\n          setLoadState({ loading: false, loaded: true, error: '' });\r\n\r\n        } catch (err) {\r\n          setLoadState({ loading: false, loaded: false, error: err });\r\n        }\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [loadState.loading, queryState.query]);\r\n\r\n  const handleQuery = (event) => {\r\n    setQueryState({ query: event.target.value, });\r\n\r\n    if (event.key === \"Enter\") {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  const handleSearchButton = async () => {\r\n    setLoadState({ loading: true, loaded: true, error: '' });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Jumbotron className=\"bg-black-7 rounded-0\">\r\n        <h2 className=\"text-center text-white\">What would you like to eat?</h2>\r\n        <Form inline className=\"justify-content-center mt-5\">\r\n          <FormControl\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            className=\"mr-sm-2\"\r\n            value={queryState.query}\r\n            onChange={handleQuery}\r\n            onKeyPress={handleQuery} />\r\n          <Button className=\"mt-sm-2 w-sm-100\" variant=\"outline-success\" onClick={handleSearchButton}>Search</Button>\r\n        </Form>\r\n      </Jumbotron>\r\n\r\n      <div className=\"d-flex justify-content-center\">\r\n        {loadState.loading ?\r\n          <div className=\"spinner-container\">\r\n            <Spinner animation=\"border\" variant=\"success\" className=\"mx-auto my-auto spinner-size\" />\r\n          </div> :\r\n          <RecipeCards recipes={recipesState.recipes} />\r\n        }\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as recipesService from '../../../services/recipes/recipes-service';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport './recipe-card-detail.css';\r\n\r\nconst TagBox = props => {\r\n  return (\r\n    <div className='w-100 min-height max-w-20'>\r\n      <div className={props.bg + ' text-white font-weight-bold pl-2'}>\r\n        {props.title}\r\n      </div>\r\n      <div>\r\n        {props.labels.map(label => (\r\n          <React.Fragment key={label}>\r\n            <Badge variant='secondary'>{label}</Badge>{' '}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RecipeCardDetail = props => {\r\n  const [recipeState, setRecipeState] = useState({ recipe: null });\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const recipe = await recipesService.fetchRecipeById(\r\n        props.match.params.id,\r\n      );\r\n\r\n      setRecipeState({ recipe });\r\n    }\r\n    fetchData();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      {recipeState.recipe ? (\r\n        <Container className='bg-black-7 pl-5 pr-5 mt-5 mb-5 pt-5 pb-5'>\r\n          <Row className='justify-content-md-center'>\r\n            <h2 className='text-center text-light'>{recipeState.recipe.label}</h2>\r\n          </Row>\r\n          <Row className='mt-4'>\r\n            <Col>\r\n              <Row className='justify-content-center'>\r\n                <img src={recipeState.recipe.image} alt='tasty food' />\r\n              </Row>\r\n              <Row className='justify-content-center '>\r\n                <ListGroup className='w-300px mah-500px scrolly-auto'>\r\n                  {recipeState.recipe.ingredientLines.map(ing => (\r\n                    <ListGroup.Item key={ing}>{ing}</ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              </Row>\r\n              <Row className='justify-content-center mt-3'>\r\n                <a\r\n                  className='btn btn-primary w-300px'\r\n                  href={recipeState.recipe.url}\r\n                >\r\n                  {recipeState.recipe.source}\r\n                </a>\r\n              </Row>\r\n            </Col>\r\n            <Col>\r\n              <Row className='justify-content-center mt-sm-6'>\r\n                <TagBox\r\n                  bg='bg-success'\r\n                  title='Diet labels'\r\n                  labels={recipeState.recipe.dietLabels}\r\n                />\r\n              </Row>\r\n              <Row className='justify-content-center'>\r\n                <TagBox\r\n                  bg='bg-primary'\r\n                  title='Health labels'\r\n                  labels={recipeState.recipe.healthLabels}\r\n                />\r\n              </Row>\r\n              <Row className='justify-content-center'>\r\n                <TagBox\r\n                  bg='bg-warning'\r\n                  title='Cautions'\r\n                  labels={recipeState.recipe.cautions}\r\n                />\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <div className='spinner-container'>\r\n          <Spinner\r\n            animation='border'\r\n            variant='success'\r\n            className='mx-auto my-auto spinner-size'\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeCardDetail;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport SaladBowl from '../../assets/salad.jpg';\r\nimport Dessert from '../../assets/dessert.jpg';\r\nimport SeaFood from '../../assets/sea-food.jpg';\r\nimport './home.css';\r\n\r\nconst rowDish = props => {\r\n  let leftItem = (\r\n    <Col className=\"hide-sm\">\r\n      <div className='w-300px' />\r\n    </Col>\r\n  );\r\n  let rightItem = (\r\n    <Col className='d-sm-flex justify-content-sm-center'>\r\n      <Image src={props.image} roundedCircle />\r\n    </Col>\r\n  );\r\n\r\n  let justify = 'end';\r\n  let order = 'order-sm-1';\r\n  let auxItem;\r\n\r\n  if (props.left) {\r\n    // Switch left and right items\r\n    justify = 'start';\r\n    order = '';\r\n    auxItem = leftItem;\r\n    leftItem = rightItem;\r\n    rightItem = auxItem;\r\n  }\r\n\r\n  return (\r\n    <Row\r\n      className={\r\n        'mt-5 justify-content-' + justify + ' align-items-center text-light'\r\n      }\r\n    >\r\n      {leftItem}\r\n      <Col className={order}>\r\n        <div className='d-flex align-items-center bg-dark pl-4 pr-4 pt-2 pb-2 mt-sm-2'>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolor ea\r\n            veritatis esse laborum harum perferendis incidunt. Eum voluptatibus,\r\n            iste magnam obcaecati quisquam molestias mollitia optio laborum,\r\n            commodi est reprehenderit assumenda!\r\n          </p>\r\n        </div>\r\n      </Col>\r\n      {rightItem}\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst RowDish = rowDish;\r\n\r\nconst home = props => (\r\n  <React.Fragment>\r\n    <h1 className='title display-1 font-weight-bold text-center mt-sm-5'>\r\n      Salad Bowl\r\n    </h1>\r\n    <h1 className='text-center mt-sm-1'>Healthy and Tasty</h1>\r\n    <Container className='mt-5'>\r\n      <RowDish image={SaladBowl} left />\r\n      <RowDish image={SeaFood} />\r\n      <RowDish image={Dessert} left />\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default home;\r\n","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { HashRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\r\nimport Search from '../../pages/search/search';\r\nimport RecipeCardDetail from '../recipe-cards/recipe-card-detail/recipe-card-detail';\r\nimport Home from '../../pages/home/home';\r\nimport Logo from '../../assets/salad-bowl-3.png';\r\n\r\nconst navbar = (props) => (\r\n    <Router>\r\n        <Navbar bg=\"dark sticky-top\" expand=\"lg\" variant=\"dark\">\r\n            <Navbar.Brand>\r\n                <img\r\n                    src={Logo}\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                    alt=\"Salad bowl logo\"\r\n                /></Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/search\">Search</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/search/\" exact component={Search} />\r\n            <Route path=\"/search/:id\" exact component={RecipeCardDetail} />\r\n        </Switch>\r\n    </Router>\r\n);\r\n\r\nexport default navbar;","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport './footer.css';\r\n\r\nconst footer = props => (\r\n  <Jumbotron className='bg-dark mb-0 rounded-0 text-light mt-10rem'>\r\n    <div className=\"d-flex justify-content-center\">\r\n      <button className='fa fa-facebook' />\r\n      <button className='fa fa-twitter' />\r\n      <button className='fa fa-linkedin' />\r\n      <button className='fa fa-instagram' />\r\n    </div>\r\n  </Jumbotron>\r\n);\r\n\r\nexport default footer;\r\n","import React from 'react';\r\nimport TableBg from '../assets/table.jpg';\r\nimport './background.css';\r\n\r\nconst background = props => (\r\n  <React.Fragment>\r\n    <div id='bg'>\r\n      <img src={TableBg} alt=\" wood table\"/>\r\n    </div>\r\n    {props.children}\r\n  </React.Fragment>\r\n);\r\n\r\nexport default background;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from './components/navbar/navbar';\nimport Footer from './components/footer/footer';\nimport Background from './hoc/background';\n\n\nfunction App() {\n  return (\n    <Background>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Navbar></Navbar>\n        </header>\n        <footer>\n          <Footer></Footer>\n        </footer>\n      </div>\n    </Background>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/salad.21974392.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dessert.538e82e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sea-food.fd4aeef5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/salad-bowl-3.54c35b08.png\";","module.exports = __webpack_public_path__ + \"static/media/table.fe133716.jpg\";"],"sourceRoot":""}